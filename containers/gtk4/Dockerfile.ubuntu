FROM docker.io/ubuntu:jammy AS build-stage
WORKDIR /linuxdeploy
ENV APPIMAGE_EXTRACT_AND_RUN=1
ENV DEBIAN_FRONTEND=noninteractive
ARG MACHINE=x86_64
ARG APPDIR=/AppDir
ARG TZ=UTC
RUN ln -snf "/usr/share/zoneinfo/$TZ" "/etc/localtime" && echo "$TZ" > /etc/timezone
RUN apt-get update && \
    apt-get install -y dpkg-dev wget librsvg2-dev file findutils pkg-config libgtk-4-1 \
    libgtk-4-dev gtk-4-examples gir1.2-gtk-4.0 libgirepository1.0-dev libfuse2
COPY . .
ADD "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-${MACHINE}.AppImage" .
RUN chmod --verbose +x *.sh *.AppImage
RUN ./linuxdeploy-${MACHINE}.AppImage \
    --appdir ${APPDIR} \
    --plugin gtk \
    --output appimage \
    --executable /usr/bin/gtk4-widget-factory \
    --desktop-file /usr/share/applications/org.gtk.WidgetFactory4.desktop \
    --icon-file /usr/share/icons/hicolor/scalable/apps/org.gtk.WidgetFactory4.svg

FROM docker.io/ubuntu:jammy
VOLUME ["/AppImage"]
WORKDIR /AppImage
ENV APPIMAGE_EXTRACT_AND_RUN=1
ARG MACHINE=x86_64
COPY --from=build-stage "/linuxdeploy/Widget_Factory-${MACHINE}.AppImage" "./Widget_Factory.AppImage"
ENTRYPOINT ["./Widget_Factory.AppImage"]
